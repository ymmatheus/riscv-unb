# -*- coding: utf-8 -*-
'''
	
	Vari√°veis

'''

# Decode variables
opcode = ''
rd = ''
funct3 = ''
rs1 = ''
rs2 = ''
funct7 = ''
imm_i = ''
imm_s = ''
imm_b = ''
imm_u = ''
imm_j = ''
shamnt = ''

# Architectural values
#CODE_MEMORY_SIZE = 8192
CODE_MEMORY_SIZE = 512
#DATA_MEMORY_SIZE = 8192
DATA_MEMORY_SIZE = 2048
XLEN = 32

registers	= {	
	"00000":'00000000000000000000000000000000', #0 $zero
    "00001":'00000000000000000000000000000000', #1 $at
    "00010":'00000000000000000000000000000000', #2  $v0
	"00011":'00000000000000000000000000000000', #3  $v1
	"00100":'00000000000000000000000000000000', #4  $a0
	"00101":'00000000000000000000000000000000', #5  $a1
	"00110":'00000000000000000000000000000000', #6  $a2		
	"00111":'00000000000000000000000000000000', #7  $a3
	"01000":'00000000000000000000000000000000', #8  $t0				
	"01001":'00000000000000000000000000000000', #9  $t1
	"01010":'00000000000000000000000000000000', #10 $t2
	"01011":'00000000000000000000000000000000', #11 $t3
	"01100":'00000000000000000000000000000000', #12 $t4
	"01101":'00000000000000000000000000000000', #13 $t5
	"01110":'00000000000000000000000000000000', #14 $t6
	"01111":'00000000000000000000000000000000', #15 $t7
	"10000":'00000000000000000000000000000000', #16 $s0
	"10001":'00000000000000000000000000000000', #17 $s1
	"10010":'00000000000000000000000000000000', #18 $s2
	"10011":'00000000000000000000000000000000', #19 $s3
	"10100":'00000000000000000000000000000000', #20 $s4
	"10101":'00000000000000000000000000000000', #21 $s5
	"10110":'00000000000000000000000000000000', #22 $s6
	"10111":'00000000000000000000000000000000', #23 $s7
	"11000":'00000000000000000000000000000000', #24 $t8
	"11001":'00000000000000000000000000000000', #25 $t9
	"11010":'00000000000000000000000000000000', #26 $k0
	"11011":'00000000000000000000000000000000', #27 $k1
	"11100":'00000000000000000000000000000000', #28 $gp
	"11101":'00000000000000000000000000000000', #29 $sp
	"11110":'00000000000000000000000000000000', #30 $fp
	"11111":'00000000000000000000000000000000', #31 $ra					
}

REGISTER_NAMES = {
    "x0":"00000",
    "x1":"00001",
    "x2":"00010",
    "x3":"00011",
    "x4":"00100",
    "x5":"00101",
    "x6":"00110",
    "x7":"00111",
    "x8":"01000",
    "x9":"01001",
    "x10":"01010",
    "x11":"01011",
    "x12":"01100",
    "x13":"01101",
    "x14":"01110",
    "x15":"01111",
    "x16":"10000",
    "x17":"10001",
    "x18":"10010",
    "x19":"10011",
    "x20":"10100",
    "x21":"10101",
    "x22":"10110",
    "x23":"10111",
    "x24":"11000",
    "x25":"11001",
    "x26":"11010",
    "x27":"11011",
    "x28":"11100",
    "x29":"11101",
    "x30":"11110",
    "x31":"11111",
    "zero":"00000",
    "ra":"00001",
    "sp":"00010",
    "gp":"00011",
    "tp":"00100",
    "t0":"00101",
    "t1":"00110",
    "t2":"00111",
    "fp":"01000",
    "s0":"01000",
    "s1":"01001",
    "a0":"01010",
    "a1":"01011",
    "a2":"01100",
    "a3":"01101",
    "a4":"01110",
    "a5":"01111",
    "a6":"10000",
    "a7":"10001",
    "s2":"10010",
    "s3":"10011",
    "s4":"10100",
    "s5":"10101",
    "s6":"10110",
    "s7":"10111",
    "s8":"11000",
    "s9":"11001",
    "s10":"11010",
    "s11":"11011",
    "t3":"11100",
    "t4":"11101",
    "t5":"11110",
    "t6":"11111" 
}

REVERSE_REGISTER_NAMES = {
    "00000":"x0",
    "00001":"x1",
    "00010":"x2",
    "00011":"x3",
    "00100":"x4",
    "00101":"x5",
    "00110":"x6",
    "00111":"x7",
    "01000":"x8",
    "01001":"x9",
    "01010":"x10",
    "01011":"x11",
    "01100":"x12",
    "01101":"x13",
    "01110":"x14",
    "01111":"x15",
    "10000":"x16",
    "10001":"x17",
    "10010":"x18",
    "10011":"x19",
    "10100":"x20",
    "10101":"x21",
    "10110":"x22",
    "10111":"x23",
    "11000":"x24",
    "11001":"x25",
    "11010":"x26",
    "11011":"x27",
    "11100":"x28",
    "11101":"x29",
    "11110":"x30",
    "11111":"x31"
}

pc = 0
ri = 0
data_memory		= ['00000000' for i in range(DATA_MEMORY_SIZE)] # each address is a byte
code_memory		= [XLEN*'0' for i in range(CODE_MEMORY_SIZE)]
console_input   = []
console_output  = []

exit_flag = False
MAX_NUMBER_CYCLES = 10000